name: Manual Production Deployment
on:
  workflow_dispatch:
jobs:
  deploy:
    name: Deploy to production
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.buzzingpixel.com/files/slack-notifications-icon.png
          SLACK_COLOR: '#1B7FBA'
          SLACK_TITLE: ':large_blue_circle: BuzzingPixel.com Github Deployment has started'
          SLACK_FOOTER: '<https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|View Run>'

      - name: Log in to production server and run commands
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.PROD_DEPLOY_SSH_USER }}
          host: ${{ secrets.PROD_DEPLOY_SSH_HOST }}
          key: ${{ secrets.PROD_DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            # Log in to github docker registry
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin;

            # Pull app image
            docker pull ghcr.io/buzzingpixel/buzzingpixel.com-app

            # Disable scheduler and queue runners
            cd /root/buzzingpixel.com;
            echo "" > /root/buzzingpixel.com/disableSchedule;
            ./dev supervisor-stop-queue

            # Copy files
            docker run --entrypoint "" --name tmp ghcr.io/buzzingpixel/buzzingpixel.com-app /bin/true;
            mkdir -p /root/buzzingpixel.com/docker/utility;
            docker cp tmp:/opt/project/docker/utility/prod.sh /root/buzzingpixel.com/docker/utility/prod.sh;
            docker cp tmp:/opt/project/.env /root/buzzingpixel.com/.env;
            docker cp tmp:/opt/project/docker-compose.prod.yml /root/buzzingpixel.com/docker-compose.prod.yml;
            docker cp tmp:/opt/project/docker-compose.yml /root/buzzingpixel.com/docker-compose.yml;
            docker cp tmp:/opt/project/queueRunner.sh /root/buzzingpixel.com/queueRunner.sh;
            chmod +x /root/buzzingpixel.com/queueRunner.sh;
            docker cp tmp:/opt/project/scheduleRunner.sh /root/buzzingpixel.com/scheduleRunner.sh;
            chmod +x /root/buzzingpixel.com/scheduleRunner.sh;
            docker rm tmp;
            cat /root/buzzingpixel.com/.env.local >> /root/buzzingpixel.com/.env

            # Stop old containers
            cd /root/buzzingpixel.com;
            docker kill buzzingpixel-utility;
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p buzzingpixel down || printf "\n";
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p buzzingpixel kill || printf "\n";

            # Start new containers from new images
            cd /root/buzzingpixel.com;
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml -p buzzingpixel up -d --remove-orphans --no-color;

            # Restart the proxy server
            cd /root/nginx-master;
            docker kill certbot-master;
            docker-compose down;
            docker-compose up -d;

            # Run after scripts
             cd /root/buzzingpixel.com;
            ./dev container-app php cli migrations:migrate --no-ansi --no-interaction;
            ./dev container-app php cli cache:clear --no-ansi --no-interaction;
            ./dev container-app php cli orm:generate-proxies --no-ansi --no-interaction;

            # Enable scheduler and queue runners
            cd /root/buzzingpixel.com;
            rm /root/buzzingpixel.com/disableSchedule;
            ./dev supervisor-start-queue

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.buzzingpixel.com/files/slack-notifications-icon.png
          SLACK_COLOR: '#A94442'
          SLACK_TITLE: ':red_circle: BuzzingPixel.com Github Deployment has failed'
          SLACK_FOOTER: '<https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|View Run>'

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: success()
        env:
          SLACK_WEBHOOK: ${{ secrets.CI_SLACK_WEBHOOK }}
          SLACK_USERNAME: Github
          SLACK_ICON: https://www.buzzingpixel.com/files/slack-notifications-icon.png
          SLACK_COLOR: '#3B763D'
          SLACK_TITLE: ':large_green_circle: BuzzingPixel.com Github Deployment succeeded'
          SLACK_FOOTER: '<https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|View Run>'
