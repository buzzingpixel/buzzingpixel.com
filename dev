#!/usr/bin/env bash

COMPOSE_DOCKER_CLI_BUILD=1
DOCKER_BUILDKIT=1

#########################
# Handy Color Variables #
#########################

# Reset
Reset="\033[0m"; # Text Reset

# Regular Colors
Black="\033[0;30m"; # Black
Red="\033[0;31m"; # Red
Green="\033[0;32m"; # Green
Yellow="\033[0;33m"; # Yellow
Blue="\033[0;34m"; # Blue
Purple="\033[0;35m"; # Purple
Cyan="\033[0;36m"; # Cyan
White="\033[0;37m"; # White

# Bold
BBlack="\033[1;30m"; # Black
BRed="\033[1;31m"; # Red
BGreen="\033[1;32m"; # Green
BYellow="\033[1;33m"; # Yellow
BBlue="\033[1;34m"; # Blue
BPurple="\033[1;35m"; # Purple
BCyan="\033[1;36m"; # Cyan
BWhite="\033[1;37m"; # White

##############################
# /END Handy Color Variables #
##############################

# Arguments
cmd=${1};
allArgs=${@};
allArgsExceptFirst=${@:2};
secondArg=${2};

# Variables
composeFiles="-f docker-compose.yml -f docker-compose.dev.yml";
nodeDockerImage="node:15.8.0";

# Make sure .env exists
if [[ ! -f ".env" ]]; then
    cp /opt/project/.env.example /opt/project/.env;
fi

# Source all of our executable files â€” these should contain functions that can be run
for f in $(find bin -name '*.sh'); do
    chmod +x ${f};
    source ${f};
done

# If no command/function name to run was provided, list out the functions available
if [[ -z "${cmd}" ]]; then
    printf "${Green}The following commands are available:\n${Yellow}";

    IFS=$'\n'
    for f in $(declare -F); do
       printf "  ./dev ${f:11}\n";
    done

    printf "${Reset}";

    exit 0;
fi

# Run the specified function (${cmd}) and pass it any arguments specified (${allArgsExceptFirst})
${cmd} ${allArgsExceptFirst};
